imply s32 bugCheck();
/%. = 0xdc00
%/
/&_start:
.globl _start
&/
imply s32 runSystem();
imply s32 executeSystem();
int entry() {
	/*
	:entry_aaa;
	((0xb8000 as *u16)@ as u32 + 1) as u16 -> (0xb8000 as *u16);
	goto entry_aaa;
	*/
	runSystem();
	u8 t = 252;
	int i;
	:entry_loop1;
	((0xb8000 + (t to u32)) as *u16)@ -> ((0xb8000 + (((t + 2) as u8) to u32)) as *u16);
	t = t - 2;
	i = 0;
	:entry_loop2;
	if (i < 32768) {
		i = i + 1;
		goto entry_loop2;
	}
	goto entry_loop1;
}
#import "elfExec.dhulb"
imply s32 setup();
/&irupt_null:
.globl irupt_null
iret
set_idt:
.globl set_idt
movl 4(%esp),%edx
movl %edx,0x000073fc
movl 8(%esp),%edx
movw %dx,0x000073fa
lidt 0x0000073fa
ret
runSystem:
&/
imply u8 farRunELF;
int runSys() {
	setup();
	/*
	(setup() + 0x30) as u8 -> (0xb8000 as *u8);
	:runSys_loop1;
	goto runSys_loop1;
	*/
	/*((0xb8002 as *u8)@ as int + 1) -> (0xb8002 as *u8);*/
	farRunELF$ -> (0x7f7f8 as *addr);
	int i = executeSystem();
	(i + 0x30) as u8 -> (0xb8000 as *u8);
	return i;
}
/&setup:
.globl setup
pushl %ebp
movl %esp,%ebp# TODO Are there allowed to be non-aligned stack frames?
andl $0xfffffff0,%esp
call setup_w
movl %ebp,%esp
popl %ebp
ret
executeSystem:
.globl executeSystem
pushl %ebp
movl %esp,%ebp# TODO Are there allowed to be non-aligned stack frames?
andl $0xfffffff0,%esp
call executeSystem_w
movl %ebp,%esp
popl %ebp
ret
findSeg:
.globl findSeg
pushl %ebp
movl %esp,%ebp# TODO Are there allowed to be non-aligned stack frames
andl $0xfffffff0,%esp
call findSeg_w
movl %ebp,%esp
popl %ebp
ret
&/
